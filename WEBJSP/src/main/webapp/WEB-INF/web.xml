<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd" id="WebApp_ID" version="6.0">
  <display-name>WEBJSP</display-name>
  <welcome-file-list>
    <!-- 페이지로 접속했을 때 기본 페이지 설정 -->
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  <context-param><!-- 공유 파라미터(전역 자원) - 모든 웹페이지에서 사용가능한 파라미터 설정
  context-param 전역자원의 의미를 가짐 application.getInitParameter("email");으로 읽을 수 있음 -->
    <description>이 설명은 개발자의 마음대로 작성</description>
    <param-name>email</param-name>
    <param-value>kosa@kosa.or.kr</param-value>
  </context-param>
  <context-param>
    <description>기본 업로드 파일 경로</description>
    <param-name>filePath</param-name>
    <param-value>C:\\Web\\upload</param-value>
  </context-param>
  <!-- 전역적인 예외 처리
  1. 상태코드(500 서버오류, 404 요청 페이지 없음, 403 권한 없는 경우 등)별로 처리
  2. 상세하게(예외 처리 - NullPoint, IndexOut, ...) -> 이 방법은 실제로 사용하지 않음(귀찮기 때문에)
  
  개발 시에는 설정하지 않음. 실 배포할 때 예외 페이지 처리함
   -->
   <!-- 해당 코드는 실 배포 시에 처리합니다(예외 페이지 전역적으로 설정)
    web.xml이 스프링에서는 애플리케이션.프로퍼티스 또는 yml파일로 생각하면 된다고 함 
  <error-page>
    <error-code>500</error-code>
    <location>/error/Error500.jsp</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/error/Error404.jsp</location>
  </error-page>
  -->
</web-app>